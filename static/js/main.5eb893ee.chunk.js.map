{"version":3,"sources":["context/ThemeContext.jsx","components/ui/Input/Input.jsx","components/ui/Tooltip.jsx","helpers/index.js","context/DataContext.jsx","components/ui/Input/Label.jsx","components/ui/ValueCompare.jsx","components/ui/Toggle.jsx","components/ui/Input/index.jsx","components/ui/TutorialModal.jsx","components/ui/Navbar.jsx","components/ui/StaticField.jsx","components/groups/Investment.jsx","components/ui/Collapsible.jsx","components/groups/IncomeAndExpense.jsx","components/groups/Evaluation.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","isDarkMode","setDarkMode","useEffect","darkMode","localStorage","getItem","Provider","value","toggleDarkMode","newMode","setItem","Input","onChange","error","onClose","useContext","className","length","type","onClick","Tooltip","title","icon","iconClass","window","innerWidth","width","setWidth","isSmallScreen","updateWidth","addEventListener","removeEventListener","popoverClass","popover","Popover","Title","Content","OverlayTrigger","trigger","placement","overlay","round","decimal","parseFloat","toFixed","formatValue","toLocaleString","style","currency","calcValueOrPercent","valueOf","split","percent","fixedValue","evaluateData","data","homeValue","purchasePrice","additionalCosts","rent","mortgageRate","mortgageTerm","leaseLength","turnover","vacancyRate","downPayment","closingCosts","upFrontCost","propertyManager","loanBalance","mortgagePayment","p","r","t","Math","pow","calculateMortgagePayment","insurance","propertyTax","cashFlow","cashOnCash","leaseRenewalFee","procurementFee","additionalPropertyManagementExpense","equityYearOne","n","equity","calculateEquityGainYearOne","majorMinorCapEx","mediumTerm","mediumReturn","warnings","DataContext","defaults","name","DataProvider","setData","evalData","setEvalData","setWarnings","valueCompare","setValueCompareX","urlParams","URLSearchParams","location","search","initialData","Object","keys","forEach","key","get","document","evaluate","evalWarnings","setDataValue","updatedData","setValueCompare","active","Label","label","isStatic","undefined","info","increaseCompareGood","ValueCompare","valueType","result","isGood","isIncreaseGood","includes","Toggle","toggle","leftIcon","rightIcon","size","styles","height","padding","CustomInput","inline","valueAndPercent","percentValueOf","isActive","setIsActive","editValue","setEditValueX","setError","setEditValue","useCallback","newEditValue","setType","newType","newValue","join","updateUrlParams","set","history","replaceState","toString","onSubmit","e","preventDefault","target","isNaN","TutorialModal","show","setShow","handleClose","Nav","Link","Modal","onHide","Header","closeButton","Body","href","Footer","Button","variant","CustomNavbar","Navbar","expand","Brand","color","aria-controls","Collapse","id","NavDropdown","alignRight","StaticField","Investment","Collapsible","open","setOpen","aria-expanded","in","IncomeAndExpense","Evaluation","App","process","ProviderApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5eb893ee.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const darkMode = localStorage.getItem('isDarkTheme');\n    setDarkMode(darkMode === 'true');\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newMode = !isDarkMode;\n    setDarkMode(newMode);\n    localStorage.setItem('isDarkTheme', newMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode }}>{children}</ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { FiX } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\nimport { ThemeContext } from '../../../context/ThemeContext';\n\nconst Input = ({ value, onChange, error, onClose }) => {\n  const { isDarkMode } = useContext(ThemeContext);\n  return (\n    <>\n      <div className=\"d-flex flex-direction-row align-items-center\">\n        <input\n          className={`form-control${error.length !== 0 ? 'is-invalid ' : ''} ${\n            isDarkMode ? ' bg-dark text-light' : ''\n          }`}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n        <span className=\"close-input\" onClick={onClose}>\n          <FiX />\n        </span>\n      </div>\n      {error.length !== 0 && <div className=\"invalid-feedback\">{error}</div>}\n    </>\n  );\n};\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport { ThemeContext } from '../../context/ThemeContext';\n\nconst Tooltip = ({ children, title, icon, iconClass = '' }) => {\n  const { isDarkMode } = useContext(ThemeContext);\n  const [width, setWidth] = useState(window.innerWidth);\n  const isSmallScreen = width < 600;\n\n  useEffect(() => {\n    const updateWidth = () => {\n      setWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', updateWidth);\n    return () => window.removeEventListener('resize', updateWidth);\n  }, []);\n\n  let popoverClass = '';\n  popoverClass += isDarkMode ? 'dark' : '';\n  popoverClass += isSmallScreen ? ' top' : ' right';\n\n  const popover = (\n    <Popover className={popoverClass}>\n      <Popover.Title>{title}</Popover.Title>\n      <Popover.Content>{children}</Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      trigger={['hover', 'click']}\n      placement={isSmallScreen ? 'top' : 'right'}\n      overlay={popover}\n    >\n      <span className={`p-1 ${iconClass}`}>{icon}</span>\n    </OverlayTrigger>\n  );\n};\n\nTooltip.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  iconClass: PropTypes.string,\n};\n\nexport default Tooltip;\n","const round = (value, decimal = 2) => {\n  return parseFloat(value.toFixed(decimal));\n};\n\nexport const formatValue = (value, type) => {\n  switch (type) {\n    case 'V':\n    case 'currency':\n      return parseFloat(value).toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      });\n    case 'P':\n    case 'percent':\n      return `${(parseFloat(value) * 100).toFixed(3)}%`;\n    case 'number':\n    case 'text':\n      return value;\n    default:\n      return '!REF';\n  }\n};\n\nexport const calcValueOrPercent = (value, valueOf) => {\n  const [percent, fixedValue, type] = value.split(',');\n\n  return type === 'P' ? parseFloat(percent) * valueOf : parseFloat(fixedValue);\n};\n\nexport const calculateMortgagePayment = (p, r, t) => {\n  const mortgagePayment =\n    (p * (r / 12) * Math.pow(1 + r / 12, 12 * t)) / (Math.pow(1 + r / 12, 12 * t) - 1);\n  return round(mortgagePayment);\n};\n\nexport const calculateEquityGainYearOne = (p, r, n) => {\n  const equity = p * (1 - (Math.pow(1 + r, n) - Math.pow(1 + r, 12)) / (Math.pow(1 + r, n) - 1));\n  return round(equity);\n};\n\nexport const evaluateData = (data) => {\n  const homeValue = parseFloat(data.homeValue);\n  const purchasePrice = parseFloat(data.purchasePrice);\n  const additionalCosts = parseFloat(data.additionalCosts);\n  const rent = parseFloat(data.rent);\n  const mortgageRate = parseFloat(data.mortgageRate);\n  const mortgageTerm = parseFloat(data.mortgageTerm);\n  const leaseLength = parseFloat(data.leaseLength);\n  const turnover = parseFloat(data.turnover);\n  const vacancyRate = parseFloat(data.vacancyRate);\n  const downPayment = calcValueOrPercent(data.downPayment, purchasePrice);\n  const closingCosts = calcValueOrPercent(data.closingCosts, purchasePrice);\n  const upFrontCost = downPayment + closingCosts + additionalCosts;\n  const propertyManager = calcValueOrPercent(data.propertyManager, rent);\n  const loanBalance = purchasePrice - downPayment;\n  const mortgagePayment = calculateMortgagePayment(loanBalance, mortgageRate, mortgageTerm);\n  const insurance = calcValueOrPercent(data.insurance, purchasePrice);\n  const propertyTax = calcValueOrPercent(data.propertyTax, purchasePrice);\n  const cashFlow = round(rent - propertyManager - mortgagePayment - (insurance + propertyTax) / 12);\n  const cashOnCash = round((cashFlow * 12) / upFrontCost, 3);\n  const leaseRenewalFee = calcValueOrPercent(data.leaseRenewalFee, rent);\n  const procurementFee = calcValueOrPercent(data.procurementFee, rent);\n  const additionalPropertyManagementExpense = round(\n    (leaseRenewalFee / leaseLength + procurementFee / turnover) / 12,\n  );\n  const equityYearOne = calculateEquityGainYearOne(\n    loanBalance,\n    mortgageRate / 12,\n    mortgageTerm * 12,\n  );\n  const majorMinorCapEx = calcValueOrPercent(data.majorMinorCapEx, rent);\n  const mediumTerm = round(\n    cashFlow - additionalPropertyManagementExpense - rent * vacancyRate - majorMinorCapEx,\n  );\n  const mediumReturn = round((mediumTerm * 12) / upFrontCost, 3);\n\n  const warnings = {};\n  if (downPayment / 0.2 < purchasePrice) {\n    warnings.downPayment = 'Most lenders require a down payment of at least 20%.';\n  }\n  if (mortgageTerm < 1) {\n    warnings.equityYearOne =\n      \"Can't calculate equity gained in the first year if the mortgage term is less than one year.\";\n  }\n\n  const evalData = {\n    homeValue,\n    purchasePrice,\n    additionalCosts,\n    rent,\n    mortgageRate,\n    mortgageTerm,\n    leaseLength,\n    turnover,\n    vacancyRate,\n    downPayment,\n    closingCosts,\n    upFrontCost,\n    propertyManager,\n    mortgagePayment,\n    insurance,\n    propertyTax,\n    cashFlow,\n    cashOnCash,\n    leaseRenewalFee,\n    procurementFee,\n    additionalPropertyManagementExpense,\n    equityYearOne,\n    majorMinorCapEx,\n    mediumTerm,\n    mediumReturn,\n  };\n\n  return [evalData, warnings];\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { evaluateData } from '../helpers';\n\nexport const DataContext = createContext();\n\nconst defaults = {\n  name: '123 Main St. (Edit me)',\n  homeValue: '115000.00',\n  purchasePrice: '115000.00',\n  downPayment: '0.2,30000.00,P',\n  closingCosts: '0.03,2000.00,P',\n  additionalCosts: '0',\n  rent: '1100.00',\n  propertyManager: '0.1,100.00,P',\n  leaseLength: '1',\n  leaseRenewalFee: '0.25,100.00,P',\n  turnover: '3',\n  procurementFee: '1.0,1100,P',\n  mortgageRate: '0.0425',\n  mortgageTerm: '30',\n  insurance: '0.007,700.00,P',\n  propertyTax: '0.01,1000.00,P',\n  vacancyRate: '0.05',\n  majorMinorCapEx: '0.1,100,P',\n};\n\nexport const DataProvider = ({ children }) => {\n  const [data, setData] = useState(defaults);\n  const [evalData, setEvalData] = useState({});\n  const [warnings, setWarnings] = useState({});\n  const [valueCompare, setValueCompareX] = useState(null);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const initialData = {};\n    Object.keys(defaults).forEach((key) => {\n      if (key === 'name' && urlParams.get(key) !== null) {\n        document.title = `Reval - ${urlParams.get(key)}`;\n      }\n      initialData[key] = urlParams.get(key) ? urlParams.get(key) : defaults[key];\n    });\n    evaluate(initialData);\n  }, []);\n\n  const setDataValue = (name, value) => {\n    if (name === 'name') {\n      document.title = `Reval - ${value}`;\n    }\n    const updatedData = {\n      ...data,\n      [name]: value,\n    };\n    evaluate(updatedData);\n  };\n\n  const evaluate = (data) => {\n    setData(data);\n    const [evalData, evalWarnings] = evaluateData(data);\n    setEvalData(evalData);\n    setWarnings(evalWarnings);\n  };\n\n  const setValueCompare = (active) => {\n    setValueCompareX(active ? evalData : null);\n  };\n\n  return (\n    <DataContext.Provider\n      value={{ data, setDataValue, evalData, warnings, valueCompare, setValueCompare }}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nDataProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { FiAlertTriangle, FiInfo } from 'react-icons/fi';\nimport { AiFillThunderbolt } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\n\nimport Tooltip from '../Tooltip';\nimport { DataContext } from '../../../context/DataContext';\nimport info from '../../../data/info.json';\n\nconst Label = ({ label, name, isStatic = false }) => {\n  const { warnings } = useContext(DataContext);\n\n  return (\n    <label>\n      <span>{label}</span>\n      {isStatic && (\n        <Tooltip title=\"Static Field\" icon={<AiFillThunderbolt />} iconClass=\"text-muted\">\n          <span>This field is static and can&apos;t be changed</span>\n        </Tooltip>\n      )}\n      {info[name] !== undefined && (\n        <Tooltip title=\"Info\" icon={<FiInfo />} iconClass=\"text-muted\">\n          <span>{info[name]}</span>\n        </Tooltip>\n      )}\n      {warnings[name] !== undefined && (\n        <Tooltip title=\"Warning\" icon={<FiAlertTriangle />} iconClass=\"text-warning\">\n          <span>{warnings[name]}</span>\n        </Tooltip>\n      )}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isStatic: PropTypes.bool,\n};\n\nexport default Label;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DataContext } from '../../context/DataContext';\nimport { formatValue } from '../../helpers';\n\nconst increaseCompareGood = [\n  'homeValue',\n  'rent',\n  'term',\n  'cashFlow',\n  'cashOnCash',\n  'EquityYearOne',\n  'mediumTerm',\n  'mediumReturn',\n];\n\nconst ValueCompare = ({ name, valueType }) => {\n  const { evalData, valueCompare } = useContext(DataContext);\n  if (valueCompare === null || name === 'name') {\n    return null;\n  }\n\n  const result = evalData[name] - valueCompare[name];\n\n  if (result === 0) {\n    return null;\n  }\n\n  let isGood = false;\n  const isIncreaseGood = increaseCompareGood.includes(name);\n  if ((result > 0 && isIncreaseGood) || (result < 0 && !isIncreaseGood)) {\n    isGood = true;\n  }\n\n  return (\n    <span className={`pl-2 ${isGood ? 'text-success' : 'text-danger'}`}>\n      {result > 0 ? '+' : ''}\n      {formatValue(result, valueType)}\n    </span>\n  );\n};\n\nValueCompare.propTypes = {\n  name: PropTypes.string.isRequired,\n  valueType: PropTypes.string.isRequired,\n};\n\nexport default ValueCompare;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Toggle = ({ value, toggle, leftIcon, rightIcon, size = 40 }) => {\n  const styles = { height: `${size}px`, width: `${size}px`, padding: 0 };\n\n  return (\n    <div className=\"btn-group\">\n      <button\n        className={`btn btn-outline-primary icon ${value ? '' : 'active'}`}\n        type=\"button\"\n        style={styles}\n        onClick={() => (value ? toggle() : null)}\n      >\n        {leftIcon}\n      </button>\n      <button\n        className={`btn btn-outline-primary icon ${value ? 'active' : ''}`}\n        type=\"button\"\n        style={styles}\n        onClick={() => (!value ? toggle() : null)}\n      >\n        {rightIcon}\n      </button>\n    </div>\n  );\n};\n\nToggle.propTypes = {\n  value: PropTypes.bool.isRequired,\n  toggle: PropTypes.func.isRequired,\n  leftIcon: PropTypes.node.isRequired,\n  rightIcon: PropTypes.node.isRequired,\n  size: PropTypes.number,\n};\n\nexport default Toggle;\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { FiDollarSign, FiPercent } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\nimport Input from './Input';\nimport Label from './Label';\nimport ValueCompare from '../ValueCompare';\nimport Toggle from '../Toggle';\nimport { formatValue, calcValueOrPercent } from '../../../helpers';\nimport { DataContext } from '../../../context/DataContext';\n\nconst CustomInput = ({\n  name,\n  label = null,\n  value,\n  valueType = 'currency',\n  inline = false,\n  valueAndPercent = false,\n  percentValueOf = null,\n}) => {\n  const { setDataValue } = useContext(DataContext);\n  const [isActive, setIsActive] = useState(false);\n  const [editValue, setEditValueX] = useState('');\n  const [error, setError] = useState('');\n  const [percent, fixedValue, type] = value.split(',');\n\n  const setEditValue = useCallback(\n    (newEditValue) => {\n      setEditValueX(valueAndPercent ? (type === 'P' ? percent : fixedValue) : newEditValue);\n    },\n    [setEditValueX, fixedValue, type, valueAndPercent, percent],\n  );\n\n  useEffect(() => {\n    setEditValue(value);\n  }, [value, setEditValue]);\n\n  if (value == undefined) {\n    return null;\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (error.length !== 0) {\n      return;\n    }\n\n    const newValue = valueAndPercent\n      ? type === 'P'\n        ? [editValue, fixedValue, type].join(',')\n        : [percent, editValue, type].join(',')\n      : editValue;\n\n    updateUrlParams(newValue);\n    setDataValue(name, newValue);\n    setIsActive(false);\n  };\n\n  const handleOnChange = (e) => {\n    const newValue = e.target.value;\n    setError('');\n    if (valueType !== 'text' && isNaN(newValue)) {\n      setError('Must be a valid number.');\n    }\n\n    setEditValueX(newValue);\n  };\n\n  const onClose = () => {\n    setIsActive(false);\n    setError('');\n    setEditValue(valueAndPercent ? (type === 'P' ? percent : fixedValue) : value);\n  };\n\n  const setType = (newType) => {\n    const newValue = value.split(',');\n    newValue[2] = newType;\n    setEditValue(newType === 'P' ? percent : fixedValue);\n    setDataValue(name, newValue.join(','));\n    updateUrlParams(newValue);\n  };\n\n  const toggleType = () => {\n    if (type === 'P') {\n      setType('V');\n    } else {\n      setType('P');\n    }\n  };\n\n  const updateUrlParams = (newValue) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(name, newValue);\n    window.history.replaceState({}, '', '?' + urlParams.toString());\n  };\n\n  const getFormattedValue = () => {\n    if (valueAndPercent) {\n      return formatValue(calcValueOrPercent(value, percentValueOf), 'V');\n    } else {\n      return formatValue(value, valueType);\n    }\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div className={`form-group ${inline ? 'inline' : ''}`}>\n        {label && <Label label={label} name={name} />}\n        <div className=\"d-flex\">\n          <div className=\"flex-fill\">\n            {isActive ? (\n              <Input value={editValue} onChange={handleOnChange} error={error} onClose={onClose} />\n            ) : (\n              <div className=\"text-value\" onClick={() => setIsActive(true)}>\n                {getFormattedValue()}\n                <ValueCompare name={name} valueType={valueAndPercent ? 'V' : valueType} />\n              </div>\n            )}\n          </div>\n          {valueAndPercent && (\n            <Toggle\n              value={type !== 'P'}\n              toggle={toggleType}\n              leftIcon={<FiPercent />}\n              rightIcon={<FiDollarSign />}\n              size={32}\n            />\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nCustomInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  valueType: PropTypes.string,\n  inline: PropTypes.bool,\n  valueAndPercent: PropTypes.bool,\n  percentValueOf: PropTypes.number,\n};\n\nexport default CustomInput;\n","import React, { useState, useContext } from 'react';\nimport { Button, Modal, Nav } from 'react-bootstrap';\nimport { AiFillThunderbolt } from 'react-icons/ai';\n\nimport { ThemeContext } from '../../context/ThemeContext';\n\nconst TutorialModal = () => {\n  const { isDarkMode } = useContext(ThemeContext);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Nav.Link onClick={handleShow}>tutorial</Nav.Link>\n\n      <Modal show={show} onHide={handleClose} className={isDarkMode ? 'is-dark' : ''}>\n        <Modal.Header closeButton>\n          <Modal.Title>Tutorial</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>A rental property evaluator with sharable links.</p>\n          <h4>Editing Fields</h4>\n          <p>\n            All non static fields are editable. Static fields are denoted with a{' '}\n            <AiFillThunderbolt /> icon next to the label. To edit a field click on the displayed\n            text, make changes in the text input and hit ENTER on your keyboard to submit the\n            changes. Notice that all calculations a re-run, and corresponding fields are updated.\n          </p>\n          <p>\n            There are two types of editable fields. Single value, and fixed value and percent. Fixed\n            value and percent fields contain a toggle switch that allows you to quickly switch\n            between a fixed value or a percent.\n          </p>\n          <h4>Sharing links</h4>\n          <p>\n            Want to share your calculations with someone? Each edit updates the link with the new\n            value. Just send them the link after you make all your changes.\n          </p>\n          <h4>Dark Mode</h4>\n          <p>Toggle between light and dark mode from the settings dropdown.</p>\n          <h4>Value Compare</h4>\n          <p>\n            Value compare allows you go see how changing fields will effect other fields. Click the\n            Set button in the settings dropdown, make changes to some fields and compare the\n            difference from when value compare was set.\n          </p>\n          <h4>Other</h4>\n          <p>\n            Have a question, improvement, feature request or find a bug? Submit an issue{' '}\n            <a href=\"https://github.com/kmccullen97/reval/issues\">here</a>.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Got it\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default TutorialModal;\n","import React, { useContext } from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { BiBuildingHouse } from 'react-icons/bi';\nimport { FiMoon, FiSun } from 'react-icons/fi';\n\nimport Input from './Input';\nimport TutorialModal from './TutorialModal';\nimport Toggle from './Toggle';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { DataContext } from '../../context/DataContext';\n\nconst CustomNavbar = () => {\n  const { isDarkMode, toggleDarkMode } = useContext(ThemeContext);\n  const { data, valueCompare, setValueCompare } = useContext(DataContext);\n\n  return (\n    <Navbar expand=\"lg\" variant={isDarkMode ? 'dark' : 'light'}>\n      <Navbar.Brand className=\"d-flex\">\n        <BiBuildingHouse size={30} color={isDarkMode ? 'white' : 'black'} />\n        <Input name={'name'} label=\"\" value={data.name} valueType=\"text\" />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\"></Nav>\n        <Nav className=\"align-content-center\">\n          <TutorialModal />\n          <NavDropdown title=\"Settings\" alignRight className={isDarkMode ? 'dark' : ''}>\n            <div className=\"navbar-setting-item\">\n              <span className=\"label\">Value Compare</span>\n              <div>\n                {valueCompare !== null && (\n                  <button\n                    className=\"btn btn-light btn-sm mr-2\"\n                    onClick={() => setValueCompare(false)}\n                    title=\"Remove\"\n                  >\n                    Remove\n                  </button>\n                )}\n                <button className=\"btn btn-primary btn-sm\" onClick={() => setValueCompare(true)}>\n                  Set\n                </button>\n              </div>\n            </div>\n            <div className=\"navbar-setting-item\">\n              <span className=\"label\">Theme</span>\n              <Toggle\n                value={isDarkMode}\n                toggle={toggleDarkMode}\n                leftIcon={<FiSun />}\n                rightIcon={<FiMoon />}\n                size={32}\n              />\n            </div>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Label from './Input/Label';\nimport ValueCompare from './ValueCompare';\nimport { formatValue } from '../../helpers';\n\nconst StaticField = ({ name, value, label, type = 'currency' }) => (\n  <div className=\"form-group\">\n    <Label label={label} name={name} isStatic />\n    <div className=\"text-value static\">\n      {formatValue(value, type)}\n      <ValueCompare name={name} valueType={type} />\n    </div>\n  </div>\n);\n\nStaticField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n};\n\nexport default StaticField;\n","import React, { useContext } from 'react';\n\nimport Input from '../ui/Input';\nimport StaticField from '../ui/StaticField';\nimport { DataContext } from '../../context/DataContext';\n\nconst Investment = () => {\n  const { data, evalData } = useContext(DataContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <Input name=\"homeValue\" label=\"Home Value\" value={data.homeValue} />\n        <Input name=\"purchasePrice\" label=\"Purchase Price\" value={data.purchasePrice} />\n      </div>\n      <div className=\"section\">\n        <Input\n          name=\"downPayment\"\n          label=\"Down Payment\"\n          value={data.downPayment}\n          percentValueOf={evalData.purchasePrice}\n          valueAndPercent\n        />\n        <Input\n          name=\"closingCosts\"\n          label=\"Closing Costs\"\n          value={data.closingCosts}\n          percentValueOf={evalData.purchasePrice}\n          valueAndPercent\n        />\n        <Input name=\"additionalCosts\" label=\"Additional Costs\" value={data.additionalCosts} />\n      </div>\n      <div className=\"section\">\n        <StaticField name=\"upFrontCost\" label=\"Up Front Cost\" value={evalData.upFrontCost} />\n      </div>\n    </>\n  );\n};\n\nexport default Investment;\n","import React, { useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst Collapsible = ({ children }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <div\n        className=\"div-link\"\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        {open ? 'see less' : 'see more'}\n      </div>\n      <Collapse in={open}>{children}</Collapse>\n    </>\n  );\n};\n\nCollapsible.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default Collapsible;\n","import React, { useContext } from 'react';\n\nimport Input from '../ui/Input';\nimport StaticField from '../ui/StaticField';\nimport Collapsible from '../ui/Collapsible';\nimport { DataContext } from '../../context/DataContext';\n\nconst IncomeAndExpense = () => {\n  const { data, evalData } = useContext(DataContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <Input name=\"rent\" label=\"Rent\" value={data.rent} />\n      </div>\n      <div className=\"section\">\n        <div className=\"collapsible\">\n          <Input\n            name=\"propertyManager\"\n            label=\"Property Manager\"\n            value={data.propertyManager}\n            percentValueOf={evalData.rent}\n            valueAndPercent\n          />\n          <Collapsible>\n            <div className=\"indent\">\n              <Input\n                name=\"leaseLength\"\n                label=\"Lease Length\"\n                value={data.leaseLength}\n                valueType=\"number\"\n                inline\n              />\n              <Input\n                name=\"leaseRenewalFee\"\n                label=\"Lease Renewal Fee\"\n                value={data.leaseRenewalFee}\n                percentValueOf={evalData.rent}\n                valueAndPercent\n              />\n              <Input\n                name=\"turnover\"\n                label=\"Turnover\"\n                value={data.turnover}\n                valueType=\"number\"\n                inline\n              />\n              <Input\n                name=\"procurementFee\"\n                label=\"ProcurementFee\"\n                value={data.procurementFee}\n                percentValueOf={evalData.rent}\n                valueAndPercent\n              />\n              <StaticField\n                name=\"additionalPropertyManagementExpense\"\n                label=\"Additional Cost\"\n                value={evalData.additionalPropertyManagementExpense}\n              />\n            </div>\n          </Collapsible>\n        </div>\n        <div>\n          <div className=\"collapsible\">\n            <StaticField name=\"mortgagePayment\" label=\"Mortgage\" value={evalData.mortgagePayment} />\n            <Collapsible>\n              <div className=\"indent\">\n                <Input\n                  name=\"mortgageRate\"\n                  label=\"Rate\"\n                  value={data.mortgageRate}\n                  valueType=\"percent\"\n                  inline\n                />\n                <Input\n                  name=\"mortgageTerm\"\n                  label=\"Term\"\n                  value={data.mortgageTerm}\n                  valueType=\"number\"\n                  inline\n                />\n              </div>\n            </Collapsible>\n          </div>\n          <Input\n            name=\"insurance\"\n            label=\"Insurance\"\n            value={data.insurance}\n            percentValueOf={evalData.purchasePrice}\n            valueAndPercent\n          />\n          <Input\n            name=\"propertyTax\"\n            label=\"Property Taxes\"\n            value={data.propertyTax}\n            percentValueOf={evalData.purchasePrice}\n            valueAndPercent\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IncomeAndExpense;\n","import React, { useContext } from 'react';\n\nimport StaticField from '../ui/StaticField';\nimport Input from '../ui/Input';\nimport { DataContext } from '../../context/DataContext';\n\nconst Evaluation = () => {\n  const { data, evalData } = useContext(DataContext);\n  return (\n    <>\n      <div className=\"section\">\n        <StaticField name=\"cashFlow\" label=\"Cash Flow\" value={evalData.cashFlow} />\n        <StaticField\n          name=\"cashOnCash\"\n          label=\"Cash on Cash\"\n          value={evalData.cashOnCash}\n          type=\"percent\"\n        />\n        <StaticField name=\"equityYearOne\" label=\"Equity Y1\" value={evalData.equityYearOne} />\n      </div>\n      <div className=\"section\">\n        <Input\n          name=\"vacancyRate\"\n          label=\"Vacancy Rate\"\n          value={data.vacancyRate}\n          valueType=\"percent\"\n        />\n        <Input\n          name=\"majorMinorCapEx\"\n          label=\"Major Minor CapEx\"\n          value={data.majorMinorCapEx}\n          percentValueOf={evalData.rent}\n          valueAndPercent\n        />\n        <StaticField name=\"mediumTerm\" label=\"Medium Term\" value={evalData.mediumTerm} />\n        <StaticField\n          name=\"mediumReturn\"\n          label=\"Medium Return\"\n          value={evalData.mediumReturn}\n          type=\"percent\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Evaluation;\n","import React, { useContext } from 'react';\nimport { AiFillGithub } from 'react-icons/ai';\n\nimport Navbar from './components/ui/Navbar';\nimport Investment from './components/groups/Investment';\nimport IncomeAndExpenses from './components/groups/IncomeAndExpense';\nimport Evaluation from './components/groups/Evaluation';\nimport { DataProvider } from './context/DataContext';\nimport { ThemeProvider, ThemeContext } from './context/ThemeContext';\nimport './scss/main.scss';\n\nconst App = () => {\n  const { isDarkMode } = useContext(ThemeContext);\n\n  return (\n    <div className={`wrapper overflow-auto ${isDarkMode ? 'dark' : ''}`}>\n      <div>\n        <Navbar />\n      </div>\n      <div className=\"content container my-3\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-4\">\n            <Investment />\n          </div>\n          <div className=\"col-12 col-md-4\">\n            <IncomeAndExpenses />\n          </div>\n          <div className=\"col-12 col-md-4\">\n            <Evaluation />\n          </div>\n        </div>\n      </div>\n      <div className=\"text-right p-2\">\n        <span className=\"text-muted\">\n          <a href=\"https://github.com/kmccullen97/reval\" className=\"mr-2 text-muted\">\n            <AiFillGithub />\n          </a>\n          <span>v{process.env.REACT_APP_VERSION}</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst ProviderApp = () => (\n  <ThemeProvider>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </ThemeProvider>\n);\n\nexport default ProviderApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}